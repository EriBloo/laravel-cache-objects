<?php

namespace {{ namespace }};

use Carbon\CarbonInterval;
use EriBloo\CacheObjects\Concerns\CacheObjectActions;
use EriBloo\CacheObjects\Contracts\Key;
use EriBloo\CacheObjects\Contracts\CacheObject;
use EriBloo\CacheObjects\Contracts\Transformer;
use EriBloo\CacheObjects\ValueObjects\Keys\StringKey;
use EriBloo\CacheObjects\ValueObjects\Values\SerializeTransformer;

final class {{ class }} implements CacheObject
{
    use CacheObjectActions;

    public function key(): Key
    {
        return new StringKey("{{ class }}");
    }

    public function ttl(): CarbonInterval
    {
        return CarbonInterval::seconds(0);
    }

    public function transformer(): Transformer
    {
        return new SerializeTransformer();
    }
}
